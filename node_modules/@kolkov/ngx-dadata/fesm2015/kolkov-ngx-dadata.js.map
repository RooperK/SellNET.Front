{"version":3,"file":"kolkov-ngx-dadata.js","sources":["ng://@kolkov/ngx-dadata/lib/ngx-dadata.service.ts","ng://@kolkov/ngx-dadata/lib/dadata-config.ts","ng://@kolkov/ngx-dadata/lib/ngx-dadata.component.ts","ng://@kolkov/ngx-dadata/lib/ngx-dadata.module.ts","ng://@kolkov/ngx-dadata/public-api.ts","ng://@kolkov/ngx-dadata/kolkov-ngx-dadata.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {DadataResponse} from './models/dadata-response';\nimport {Bounds, DadataConfig, Location} from './dadata-config';\n\nexport enum DadataType {\n  fio = 'fio',\n  address = 'address',\n  party = 'party',\n  bank = 'bank',\n  email = 'email'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxDadataService {\n  apiKey = '';\n\n  constructor(private http: HttpClient) {\n  }\n\n  setApiKey(key: string) {\n    this.apiKey = key;\n  }\n\n  // tslint:disable-next-line:max-line-length\n  getData(value: string, type: DadataType = DadataType.address, config: DadataConfig): Observable<DadataResponse> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Token ' + this.apiKey,\n      })\n    };\n    const body = Object.assign(\n      {},\n      {query: value},\n      {count: config?.limit},\n      {location: config?.locations},\n      {location_bust: config?.locationsBoost},\n      {from_bound: config?.bounds?.fromBound},\n      {to_bound: config?.bounds?.toBound}\n    );\n    return this.http.post<DadataResponse>('https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/' + type, body, httpOptions);\n  }\n}\n","import {DadataType} from './ngx-dadata.service';\n\nexport interface Location {\n  country?: string;\n  country_iso_code?: string;\n  region?: string;\n  area?: string;\n  city?: string;\n  street?: string;\n  street_type_full?: string;\n  settlement_type_full?: string;\n  city_district_type_full?: string;\n  city_type_full?: string;\n  area_type_full?: string;\n  region_type_full?: string;\n  kladr_id?: string;\n  region_fias_id?: string;\n  area_fias_id?: string;\n  city_fias_id?: string;\n  settlement_fias_id?: string;\n  street_fias_id?: string;\n}\n\nexport interface Bound {\n  value: 'country' | 'region' | 'city' | 'street' | 'settlement' | 'area' | 'house';\n}\n\nexport interface Bounds {\n  fromBound?: Bound;\n  toBound?: Bound;\n}\n\nexport interface DadataConfig {\n  apiKey: string;\n  type?: DadataType;\n  delay?: number;\n  limit?: number;\n  width?: 'auto' | string;\n  minWidth?: '0' | string;\n  partyAddress?: 'city' | 'full';\n  locations?: Location[];\n  locationsBoost?: Location[];\n  bounds?: Bounds;\n}\n\nexport const DadataConfigDefault: DadataConfig = {\n  apiKey: '',\n  type: DadataType.address,\n  delay: 500,\n  limit: 10,\n  width: 'auto',\n  minWidth: '0',\n  partyAddress: 'city',\n  locations: null,\n};\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {DadataType, NgxDadataService} from './ngx-dadata.service';\nimport {Subject, timer} from 'rxjs';\nimport {debounce} from 'rxjs/operators';\nimport {DadataResponse} from './models/dadata-response';\nimport {DadataSuggestion} from './models/suggestion';\nimport {DadataConfig, DadataConfigDefault} from './dadata-config';\nimport {ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/*const NGX_DADATA_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgxDadataComponent),\n  multi: true,\n};*/\n\nexport function createDaDataValidator(value) {\n  return (c: FormControl) => {\n    const err = {\n      rangeError: {\n        given: c.value,\n        expected: value,\n      }\n    };\n\n    return (c.value !== value) ? err : null;\n  };\n}\n\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet uniqueDadataIdCounter = 0;\n\n@Component({\n  selector: 'ngx-dadata',\n  templateUrl: './ngx-dadata.component.html',\n  styleUrls: ['./ngx-dadata.component.scss'],\n  providers: [\n    {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxDadataComponent),\n    multi: true\n  }, /*NGX_DADATA_VALIDATOR*/]\n})\nexport class NgxDadataComponent implements OnInit, ControlValueAccessor, OnChanges {\n  private v: any = '';\n  currentFocus = -1;\n\n  opened = false;\n\n  data: DadataSuggestion[] = [];\n\n  @Input() config: DadataConfig = DadataConfigDefault;\n  @Input() apiKey: string;\n  @Input() disabled = null;\n  @Input() type = DadataType.address;\n  @Input() limit = DadataConfigDefault.limit;\n  @Input() placeholder = '';\n  @Input() locations = null;\n\n  @Output() selectedSuggestion: DadataSuggestion;\n  @Output() selected: EventEmitter<DadataSuggestion> = new EventEmitter<DadataSuggestion>();\n  // @Output() selectedData = new EventEmitter<DaDataAddress | DaDataFIO | DaDataBank | DaDataParty | DaDataEmail>();\n  // @Output() selectedString = new EventEmitter<string>();\n\n  @ViewChild('inputValue', { static: true }) inputValue: ElementRef;\n\n  private inputString$ = new Subject<string>();\n\n  /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n  id = `ngx-dadata-${uniqueDadataIdCounter++}`;\n\n  // onSuggestionSelected = (value: string) => {};\n  onTouched = () => {};\n  propagateChange: any = () => {};\n  validateFn: any = () => {};\n\n  constructor(\n    private dataService: NgxDadataService,\n    private r: Renderer2,\n    private elRef: ElementRef) {\n  }\n\n  get value(): any {\n    return this.v;\n  }\n\n  set value(v: any) {\n    if (v !== this.v) {\n      this.v = v;\n      this.propagateChange(v);\n    }\n  }\n\n  ngOnInit() {\n    /*this.validateFn = createDaDataValidator(this._value);\n    this.propagateChange(this._value);*/\n    this.type = this.config.type;\n    this.locations = this.config.locations;\n    this.dataService.setApiKey(this.apiKey ? this.apiKey : this.config.apiKey);\n    this.inputString$.pipe(\n      debounce(() => timer(this.config.delay ? this.config.delay : 500)),\n    ).subscribe(x => {\n      this.dataService.getData(x, this.type, this.config)\n        .subscribe((y: DadataResponse) => {\n        this.data = y.suggestions;\n        if (this.data.length) {\n          this.opened = true;\n        }\n      });\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.value) {\n      // console.log('ngOnChanges');\n    }\n  }\n\n  getData(value: string) {\n    this.inputString$.next(value);\n    this.currentFocus = -1;\n  }\n\n  onClick(e: MouseEvent, item: DadataSuggestion) {\n    this.inputValue.nativeElement.value = item.value;\n    this.propagateChange(item.value);\n    this.inputValue.nativeElement.focus();\n    this.selectedSuggestion = item;\n    this.data = [];\n    this.currentFocus = -1;\n    this.opened = false;\n    this.selected.emit(item);\n    // this.selectedData.emit(item.data);\n    // this.selectedString.emit(item.value);\n  }\n\n  @HostListener('document:click', ['$event'])\n  onOutsideClick($event: MouseEvent) {\n    if (!this.opened) {\n      return;\n    }\n    if (!this.elRef.nativeElement.contains($event.target)) {\n      this.data = [];\n      this.opened = false;\n    }\n  }\n\n  onArrowDown() {\n    this.removeFocus(this.currentFocus);\n    if (this.currentFocus >= this.data.length - 1) {\n      this.currentFocus = 0;\n    } else {\n      this.currentFocus++;\n    }\n    this.setFocus(this.currentFocus);\n  }\n\n  onArrowUp() {\n    this.removeFocus(this.currentFocus);\n    if (this.currentFocus === 0) {\n      this.currentFocus = this.data.length - 1;\n    } else {\n      this.currentFocus--;\n    }\n    this.setFocus(this.currentFocus);\n  }\n\n  onEnter(event: KeyboardEvent) {\n    this.selectedSuggestion = this.data[this.currentFocus];\n    this.inputValue.nativeElement.value = this.selectedSuggestion.value;\n    this.data = [];\n    this.currentFocus = -1;\n    this.propagateChange(this.selectedSuggestion.value);\n    this.selected.emit(this.selectedSuggestion);\n    // this.selectedData.emit(this.selectedSuggestion.data);\n    // this.selectedString.emit(this.selectedSuggestion.value);\n  }\n\n  setFocus(id: number) {\n    const activeEl = document.getElementById(id + 'item');\n    this.r.addClass(activeEl, 'active');\n  }\n\n  removeFocus(id: number) {\n    if (id !== -1) {\n      const activeEl = document.getElementById(id + 'item');\n      this.r.removeClass(activeEl, 'active');\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value !== undefined) {\n      this.v = value;\n    } else {\n      this.v = '';\n    }\n    this.r.setProperty(this.inputValue.nativeElement, 'innerHTML', this.v);\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a change event.\n   *\n   * @param fn a function\n   */\n  registerOnChange(fn: any): void {\n    // this.onSuggestionSelected = fn;\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a touch event.\n   *\n   * @param fn a function\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Implements disabled state for this element\n   *\n   * @param isDisabled Disabled state flag\n   */\n  setDisabledState(isDisabled: boolean): void {\n    alert('disabled!');\n    this.disabled = isDisabled;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxDadataComponent } from './ngx-dadata.component';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [NgxDadataComponent],\n  exports: [NgxDadataComponent]\n})\nexport class NgxDadataModule { }\n","/*\n * Public API Surface of ngx-dadata\n */\n\nexport * from './lib/ngx-dadata.service';\nexport * from './lib/ngx-dadata.component';\nexport * from './lib/ngx-dadata.module';\nexport * from './lib/dadata-config';\nexport * from './lib/models/data';\nexport * from './lib/models/suggestion';\nexport {DadataType} from './lib/ngx-dadata.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}